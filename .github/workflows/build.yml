name: Build

on:
  push:
    paths-ignore:
    - '**.md'
  pull_request:
    paths-ignore:
    - '**.md'

jobs:
  ubuntu:
    name: Ubuntu ${{ matrix.ubuntu_version }} (Qt ${{ matrix.qt_version }})
    runs-on: ubuntu-${{ matrix.ubuntu_version }}

    strategy:
      matrix:
        include:
        - ubuntu_version: 22.04
          qt_version: 5
          qt_package: qtbase5-dev
        - ubuntu_version: 24.04
          qt_version: 6
          qt_package: qt6-base-dev

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        max-size: 50M

    - name: Install dependencies
      run: |
        sudo apt-get install \
          ${{ matrix.qt_package }} \
          libfreetype-dev \
          libgl1-mesa-dev \
          libharfbuzz-dev \
          libpixman-1-dev \
          libxcursor-dev \
          libxi-dev \
          zlib1g-dev

    - name: Build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -DUSE_SHARED_ZLIB=on \
          -DUSE_SHARED_PIXMAN=on \
          -DUSE_SHARED_FREETYPE=on \
          -DUSE_SHARED_HARFBUZZ=on
        cmake --build build --config Release
        sudo cmake --install build --config Release

  macos:
    name: macOS ${{ matrix.macos_version }} (Qt ${{ matrix.qt_version }})
    runs-on: macos-${{ matrix.macos_version }}

    strategy:
      matrix:
        include:
        - macos_version: 14
          qt_version: 5
          qt_exact_version: 5.15.2
          architectures: x86_64
        - macos_version: 15
          qt_version: 6
          qt_exact_version: 6.8.1
          architectures: x86_64;arm64

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        max-size: 50M

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ matrix.qt_exact_version }}
        arch: clang_64
        cache: true

    - name: Build
      run: |
        cmake -B build -DCMAKE_BUILD_TYPE=Release \
          -DUSE_SHARED_ZLIB=on \
          -DCMAKE_OSX_ARCHITECTURES='${{ matrix.architectures }}'
        cmake --build build --config Release
        sudo cmake --install build --config Release

  windows:
    name: Windows (${{ matrix.arch }}-bit, Qt ${{ matrix.qt_version_major }})
    runs-on: windows-latest

    strategy:
      matrix:
        include:
        - qt_version: 5.15.2
          qt_version_major: 5
          qt_arch: win32_mingw81
          mingw_component: tools_mingw
          mingw_variant: qt.tools.win32_mingw810
          mingw_dir: mingw810_32
          arch: 32
        - qt_version: 6.8.1
          qt_version_major: 6
          qt_arch: win64_mingw
          mingw_component: tools_mingw1310
          mingw_variant: qt.tools.win64_mingw1310
          mingw_dir: mingw1310_64
          arch: 64

    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Setup ccache
      uses: hendrikmuhs/ccache-action@v1
      with:
        max-size: 50M

    - name: Install Qt
      uses: jurplel/install-qt-action@v4
      with:
        version: ${{ matrix.qt_version }}
        arch: ${{ matrix.qt_arch }}
        tools: "${{ matrix.mingw_component }},${{ matrix.mingw_variant }}"
        cache: true

    - name: Build
      env:
        CC: i686-w64-mingw32-gcc.exe
        CXX: i686-w64-mingw32-g++.exe
      run: |
        pushd aseprite
        patch -p1 < ../aseprite-fix-zlib-include.patch
        popd
        cmake -B build -DCMAKE_BUILD_TYPE=Release
        cmake --build build --config Release
        cmake --install build --config Release
